# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name : Copy application.yml from secret
      run:
        echo "${{ secrets.APPLICATION_YML }}" >> src/main/resources/application.yml
    
    - name: Build with Gradle
      run: |
          cd ./be
          ./gradlew clean build
	  
   ## 도커 로그인
    - name: Docker Hub login
      uses: docker/login-action@v2
      with:
		username: ${{ secrets.DOCKER_ID }}
		password: ${{ secrets.DOCKER_PASSWORD }}
		
   ## 도커 이미지 빌드 후 도커허브에 push하기가
   ## 테스트용 도커 이미지 삭제하기
    - name: web docker build and push
	  run: |
          cd ./be
          docker build -t ${{ secrets.DOCKER_REPO }}-server:latest .
          docker push ${{ secrets.DOCKER_REPO }}-server:latest	  

	## 서버에 접속하여 도커 이미지를 pull 받고 실행하기
	- name: executing remote ssh commands using password
	uses: appleboy/ssh-action@v0.1.6
	with:
	  host: ${{ secrets.HOST }}
	  username: ${{ secrets.EC2_USERNAME }}
	  key: ${{ secrets.KEY }}
	  port: 22
	  script: |
		./docker.sh ${{ secrets.DOCKER_REPO }}
   ## docker compose up
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/second-eyes-web
          sudo docker pull ${{ secrets.DOCKER_REPO }}/second-eyes-nginx
          docker-compose up -d
          docker image prune -f
	  
